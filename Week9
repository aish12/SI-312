1. Write a method that takes in 2 SORTED arrays and returns an array that is sorted.
You may only go through both of the arrays 1 time. 

Example: 
merge({1, 3, 5}, {0, 2, 4}) 
returns {0, 1, 2, 3, 4, 5}

merge{1, 2, 6}, {3, 4, 7, 8, 8})
returns {1, 2, 3, 4, 6, 7, 8, 8}
2. Write a method that takes in a String and prints the frequency of each letter in the ASCII alphabet. 

Example: count("ABCabcABC")

the "square" indicates an undefined character that's not printable.s
Prints this:
square: 0 square: 0 square: 0 ... A:2 B:2 C:2 D:0 E:0 ... a:1 b:1 c:1 d:0 e:0 ....

3. File parsing. 
You have a file that represents the human genome. There are 4 base pair types: A, T, C, G. Write a program that takes in this file,
and returns a count of how many times each letter occurs in the file. It is formatted as follows
<Organism Sequenced>
ATCGATCGGATC.....
GATCATCTGCATCGATC...

The actual genomic sequence can span multiple lines, and can have white space between it. 

Example:
File:
Dog
ATCG ATCG ATCG ATCG ATCG ATCG ATCG AT

Print A:8, T:8, C:7, G:7

Challenge:
Given an array of integers, return indices of the two numbers such that they add up to a specific target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9, Because nums[0] + nums[1] = 2 + 7 = 9, 
return [0, 1].
